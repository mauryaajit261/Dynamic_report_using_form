// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vastuformAPI.Data;

#nullable disable

namespace vastuformAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250422163031_initial8")]
    partial class initial8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vastuformAPI.Model.Consultation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AjnaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnahatChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuraEnergy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyAuraPercentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorToAvoid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Crystal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gemstone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LuckyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LuckyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManipuraChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuldharaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumberToAvoid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservationsAndRemedies")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("OorjaLiquid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Questions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SahasaraChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SvaddhisthanaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VishuddhaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consultations");
                });

            modelBuilder.Entity("vastuformAPI.Model.FamilyMember", b =>
                {
                    b.Property<int>("SerialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNo"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentProblem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VastuVisitId")
                        .HasColumnType("int");

                    b.HasKey("SerialNo");

                    b.HasIndex("VastuVisitId");

                    b.ToTable("FamilyMembers");
                });

            modelBuilder.Entity("vastuformAPI.Model.FamilyMember1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VastuVisit2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VastuVisit2Id");

                    b.ToTable("FamilyMembers1");
                });

            modelBuilder.Entity("vastuformAPI.Model.LechtareAntenaReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.Property<int?>("VastuVisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VastuVisitId");

                    b.ToTable("LechtareAntenaReadings");
                });

            modelBuilder.Entity("vastuformAPI.Model.TaskImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePathsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaskImages");
                });

            modelBuilder.Entity("vastuformAPI.Model.ToiletDirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VastuVisit2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VastuVisit2Id");

                    b.ToTable("ToiletDirections");
                });

            modelBuilder.Entity("vastuformAPI.Model.VastuEnergy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AjnaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnahatChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuraEnergy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuraLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsultantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthIssues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManipuraChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuldharaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SahasaraChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SvaddhisthanaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VishuddhaChakra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VastuEnergytb");
                });

            modelBuilder.Entity("vastuformAPI.Model.VastuVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutDirectionOfVastu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Advance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasementLocationAndDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BathroomToilet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedroomDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BhavanEntry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Borewell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrahmasthanaObservations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedDirections")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compatibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompoundEntry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompoundLengthHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectionOfPorch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DowsingReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElectricMeterAndSwitchBoard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLineOfTreatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstStepRemedy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GeopathicStress")
                        .HasColumnType("bit");

                    b.Property<bool>("GoodForLivingBusiness")
                        .HasColumnType("bit");

                    b.Property<string>("Hill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalArrangement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalStaircase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVithishula")
                        .HasColumnType("bit");

                    b.Property<string>("KitchenDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandShape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandSlope")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LawnDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LechtareAntenaValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiftDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivingRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LockerPrayerRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MicroEnergies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mirrors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NegativeIR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NegativeUV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfPoints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NorthShiftDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenDirections")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotEntryDirectionAndPada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotSurroundingObservations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatnaNikshap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonOfNegativity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportPreparedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondStepRemedy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SepticTankBasement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SepticTankLocationAndDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialIncidents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseBirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseBirthTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SpouseDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaircaseDirectionAndType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyRoomDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurroundingRoads")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurroundingTrees")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temple")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdStepRemedy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToiletsLocationAndDirections")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNegativeEnergy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNegativeOorja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPositiveEnergy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPositiveOorja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UndergroundWaterTank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VastuEnergy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VastuLandDefects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VithishulaDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Width")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VastuVisits");
                });

            modelBuilder.Entity("vastuformAPI.Model.VastuVisit2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AamanviyaVastu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Advance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaPinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Basement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasementDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Basin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bathroom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bedroom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BhavanEntry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bookshelf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Borewell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrahmasthanaObservation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrahmasthanaObservation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrahmasthanaObservation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrahmasthanaObservation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrahmasthanaObservation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedDirections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compatibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompoundEntry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompoundLengthHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ConstructionAreaSqFt")
                        .HasColumnType("float");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectionDefect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DowsingReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElectricMeter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLineTreatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstStepRemedy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeopathicStress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanEntity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalArrangement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalStaircase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsVithishula")
                        .HasColumnType("bit");

                    b.Property<string>("Kitchen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandDefect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LawnDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<string>("LiftDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivingRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mirrors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NegativeIR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NegativeUV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfPoints")
                        .HasColumnType("int");

                    b.Property<string>("NorthDirectionShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenDirections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherObservations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerBirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerBirthTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OwnerDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotEntryDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlotSurroundingObservations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PorchDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrayerRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatnaNikshap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonOfNegativity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportPreparedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondStepRemedy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SepticTank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SepticTankDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShalyaDosh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShapeOfLand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SleepingDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlopeOfLand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialIncident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseBirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseBirthTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SpouseDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaircaseDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyTableFacing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurroundingRoads")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurroundingTrees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temple")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thinking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdStepRemedy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Toilet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalAreaSqFt")
                        .HasColumnType("float");

                    b.Property<double?>("TotalNegativeEnergy")
                        .HasColumnType("float");

                    b.Property<string>("TotalNegativeOorja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalPositiveEnergy")
                        .HasColumnType("float");

                    b.Property<string>("TotalPositiveOorja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UndergroundWaterTank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VastuEnergy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VastuLandDefects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VastuVibration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VisitDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("VithishulaDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.Property<string>("Window")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfConstruction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VastuVisits2");
                });

            modelBuilder.Entity("vastuformAPI.Model.FamilyMember", b =>
                {
                    b.HasOne("vastuformAPI.Model.VastuVisit", null)
                        .WithMany("FamilyMembers")
                        .HasForeignKey("VastuVisitId");
                });

            modelBuilder.Entity("vastuformAPI.Model.FamilyMember1", b =>
                {
                    b.HasOne("vastuformAPI.Model.VastuVisit2", null)
                        .WithMany("FamilyMembers")
                        .HasForeignKey("VastuVisit2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vastuformAPI.Model.LechtareAntenaReading", b =>
                {
                    b.HasOne("vastuformAPI.Model.VastuVisit2", "VastuVisit2")
                        .WithMany("LechtareAntenaReadings")
                        .HasForeignKey("VastuVisitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("VastuVisit2");
                });

            modelBuilder.Entity("vastuformAPI.Model.ToiletDirection", b =>
                {
                    b.HasOne("vastuformAPI.Model.VastuVisit2", null)
                        .WithMany("Toilets")
                        .HasForeignKey("VastuVisit2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vastuformAPI.Model.VastuVisit2", b =>
                {
                    b.OwnsOne("vastuformAPI.Model.MicroEnergies", "MicroEnergies", b1 =>
                        {
                            b1.Property<int>("VastuVisit2Id")
                                .HasColumnType("int");

                            b1.Property<string>("Annapurna")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CustomerAttraction")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CustomerSatisfaction")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Happiness")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Harmony")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Health")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Jealousy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MarriageLifeHappiness")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MoneyAttraction")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProgenyHappiness")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProgenyIncrease")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Prosperity")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VastuVisit2Id");

                            b1.ToTable("MicroEnergies");

                            b1.WithOwner()
                                .HasForeignKey("VastuVisit2Id");
                        });

                    b.Navigation("MicroEnergies");
                });

            modelBuilder.Entity("vastuformAPI.Model.VastuVisit", b =>
                {
                    b.Navigation("FamilyMembers");
                });

            modelBuilder.Entity("vastuformAPI.Model.VastuVisit2", b =>
                {
                    b.Navigation("FamilyMembers");

                    b.Navigation("LechtareAntenaReadings");

                    b.Navigation("Toilets");
                });
#pragma warning restore 612, 618
        }
    }
}
